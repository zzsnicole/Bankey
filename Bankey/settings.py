"""
Django settings for Bankey project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import mangopay
from mangopay.api import APIRequest

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-ob3kia&kv8qio2*55%mci7k-2&zh3y*h-5__m+q7=r^4m3rsi'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'postman',
    'rest_framework',
    'rest_framework.authtoken',
    'user_management',
    'wallet_transactions',
    'corsheaders',
    'push_notifications'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
SITE_ID = 1
ROOT_URLCONF = 'Bankey.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Bankey.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'bankey_database',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'localhost',
    }
}

AUTH_USER_MODEL = 'user_management.User'
# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

# MEDIA files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Required choices variables
STATUS_CHOICES = (('A', 'Active'), ('I', 'Inactive'), ('D', 'Delete'))
TRANSACTION_TYPES = (('C', 'Credit'), ('D', 'Debit'), ('T', 'Transfer'))
TRANSACTION_STATUS = (('S', 'Success'), ('F', 'Fail'), ('P', 'Pending'), ('R', 'Rejected'))
CASH_REQUEST_STATUS = (('P', 'Pending'), ('A', 'Accepted'), ('R', 'Rejected'), ('C', 'Completed'))
CASH_REQUEST_TYPE = (('A', 'Add Money'), ('W', 'Withdraw Money'))
VERIFICATION_STATUS = (('V', 'Verified'), ('U', 'Unverified'))

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    )
}
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
# CORS_ORIGIN_WHITELIST = (
#     'http://localhost:8100',
#     'http://localhost:8080'
# )

# Twilio authentication parameters
TWILIO_SID = "ACf2e9c09c67553da245af1a7274d46980"
TWILIO_AUTH_TOKEN = "9573bbd677851564e3151a328db81cdf"
TWILIO_PHONE_NUMBER = "+13016850881"

# Logs configuration
LOG_ROOT = os.path.join(BASE_DIR, 'docs/logs/')
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'null': {
            'class': 'logging.NullHandler',
        },
        'user_log_file': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'formatter': 'verbose',
            'class': 'logging.FileHandler',
            'filename': LOG_ROOT+'users.log',
        },
        'wallet_log_file': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'formatter': 'verbose',
            'class': 'logging.FileHandler',
            'filename': LOG_ROOT + 'wallets.log',
        },
    },
    'loggers': {
        'users_log': {
            'handlers': ['user_log_file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'wallets_log': {
            'handlers': ['wallet_log_file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'py.warnings': {
            'handlers': ['console'],
        },
    },
}

# Postman messanger settings
POSTMAN_DISALLOW_ANONYMOUS = True
POSTMAN_DISABLE_USER_EMAILING = True
POSTMAN_SHOW_USER_AS = 'phone_no'
POSTMAN_NAME_USER_AS = 'name'

#
# PUSH_NOTIFICATIONS_SETTINGS = {
#         "FCM_API_KEY": "AIzaSyCSqiK9_o80ZmKVNn_IFOxaVe8Z8R1ybjo",
#         "FCM_ERROR_TIMEOUT": 5000
#         # "APNS_CERTIFICATE": "/path/to/your/certificate.pem",
#         # "APNS_TOPIC": "com.example.push_test"
#         # "APNS_USE_ALTERNATIVE_PORT": 2197,
#         # "APNS_USE_SANDBOX": "api.development.push.apple.com"
# }

PUSH_NOTIFICATIONS_SETTINGS = {
  # Load and process all PUSH_NOTIFICATIONS_SETTINGS using the AppConfig manager.
  "CONFIG": "push_notifications.conf.AppConfig",

  # collection of all defined applications
  "APPLICATIONS": {
    "bankey_android": {
      # PLATFORM (required) determines what additional settings are required.
      "PLATFORM": "FCM",
      # required FCM setting
      "API_KEY": "AIzaSyDEnC79xdVt7VWfbzD4VoJDJ1Oglnz0IxM",
      "ERROR_TIMEOUT": 5000
    }
  }
}

#Mangopay credentials
mangopay.client_id='bankeyapp'
mangopay.passphrase='rhrWUZBFHXjGFS5A7iKZKZyWFYeYv12bjc7BEaf4LtWKpBNPYA'
handler = APIRequest(sandbox=True)